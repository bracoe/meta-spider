diff --git a/arch/arm/mach-imx/anatop.c b/arch/arm/mach-imx/anatop.c
index e6e5572..6a612ca 100644
--- a/arch/arm/mach-imx/anatop.c
+++ b/arch/arm/mach-imx/anatop.c
@@ -145,6 +145,7 @@ void imx_anatop_pre_suspend(void)
 		return;
 	}
 
+#if defined(CONFIG_SOC_IMX6Q) || defined(CONFIG_SOC_IMX6SL) || defined(CONFIG_SOC_IMX6SX) || defined(CONFIG_SOC_IMX6ULL) || defined(CONFIG_SOC_IMX6SLL)
 	if (cpu_is_imx6q() && imx_get_soc_revision() == IMX_CHIP_REVISION_2_0)
 		imx_anatop_disable_pu(true);
 
@@ -160,6 +161,7 @@ void imx_anatop_pre_suspend(void)
 	if (cpu_is_imx6sl() || cpu_is_imx6sx() || cpu_is_imx6ul() ||
 		cpu_is_imx6ull() || cpu_is_imx6sll())
 		imx_anatop_disconnect_high_snvs(true);
+#endif
 }
 
 void imx_anatop_post_resume(void)
@@ -175,6 +177,7 @@ void imx_anatop_post_resume(void)
 		return;
 	}
 
+#if defined(CONFIG_SOC_IMX6Q) || defined(CONFIG_SOC_IMX6SL) || defined(CONFIG_SOC_IMX6SX) || defined(CONFIG_SOC_IMX6ULL) || defined(CONFIG_SOC_IMX6SLL)
 	if (cpu_is_imx6q() && imx_get_soc_revision() == IMX_CHIP_REVISION_2_0)
 		imx_anatop_disable_pu(false);
 
@@ -190,6 +193,7 @@ void imx_anatop_post_resume(void)
 	if (cpu_is_imx6sl() || cpu_is_imx6sx() || cpu_is_imx6ul() ||
 		cpu_is_imx6ull() || cpu_is_imx6sll())
 		imx_anatop_disconnect_high_snvs(false);
+#endif
 }
 
 static void imx_anatop_usb_chrg_detect_disable(void)
diff --git a/arch/arm/mach-imx/busfreq-imx.c b/arch/arm/mach-imx/busfreq-imx.c
index 353795c..ce17cad 100644
--- a/arch/arm/mach-imx/busfreq-imx.c
+++ b/arch/arm/mach-imx/busfreq-imx.c
@@ -147,7 +147,7 @@ static int busfreq_notify(enum busfreq_event event)
 
 	return notifier_to_errno(ret);
 }
-
+#if defined(CONFIG_CPU_FREQ) && !defined(CONFIG_ARM64)
 int register_busfreq_notifier(struct notifier_block *nb)
 {
 	return raw_notifier_chain_register(&busfreq_notifier_chain, nb);
@@ -159,6 +159,7 @@ int unregister_busfreq_notifier(struct notifier_block *nb)
 	return raw_notifier_chain_unregister(&busfreq_notifier_chain, nb);
 }
 EXPORT_SYMBOL(unregister_busfreq_notifier);
+#endif
 
 static struct clk *origin_step_parent;
 
@@ -171,12 +172,15 @@ static void imx6ull_lower_cpu_rate(bool enter)
 {
 	int ret;
 
+//fixme: only works with imx7d
+#if defined(CONFIG_CPU_FREQ) && !defined(CONFIG_ARM64)
 	if (enter) {
 		org_arm_rate = clk_get_rate(arm_clk);
 		origin_arm_volt = regulator_get_voltage(arm_reg);
 		origin_soc_volt = regulator_get_voltage(soc_reg);
 	}
 
+
 	clk_set_parent(pll1_bypass_clk, pll1_bypass_src_clk);
 	clk_set_parent(pll1_sw_clk, pll1_sys_clk);
 
@@ -207,6 +211,7 @@ static void imx6ull_lower_cpu_rate(bool enter)
 		clk_set_rate(arm_clk, org_arm_rate);
 		clk_set_parent(pll1_bypass_clk, pll1_clk);
 	}
+#endif
 }
 
 /*
@@ -793,6 +798,7 @@ static int set_high_bus_freq(int high_bus_freq)
 	return 0;
 }
 
+#if defined(CONFIG_CPU_FREQ) && !defined(CONFIG_ARM64)
 void request_bus_freq(enum bus_freq_mode mode)
 {
 	mutex_lock(&bus_freq_mutex);
@@ -923,7 +929,7 @@ int get_bus_freq_mode(void)
 	return cur_bus_freq_mode;
 }
 EXPORT_SYMBOL(get_bus_freq_mode);
-
+#endif
 static struct map_desc ddr_iram_io_desc __initdata = {
 	/* .virtual and .pfn are run-time assigned */
 	.length		= SZ_1M,
diff --git a/arch/arm/mach-imx/mach-imx7d.c b/arch/arm/mach-imx/mach-imx7d.c
index 3f33597..dc44b67 100644
--- a/arch/arm/mach-imx/mach-imx7d.c
+++ b/arch/arm/mach-imx/mach-imx7d.c
@@ -132,7 +132,9 @@ static void __init imx7d_init_machine(void)
 		pr_warn("failed to initialize soc device\n");
 
 	of_platform_default_populate(NULL, NULL, parent);
+#ifdef CONFIG_PM
 	imx7d_pm_init();
+#endif
 	imx_anatop_init();
 	imx7d_enet_init();
 }
diff --git a/drivers/pci/host/pci-imx6.c b/drivers/pci/host/pci-imx6.c
index 1fb3ec9..95436bd 100644
--- a/drivers/pci/host/pci-imx6.c
+++ b/drivers/pci/host/pci-imx6.c
@@ -1570,7 +1570,9 @@ static struct platform_driver imx6_pcie_driver = {
 	.driver = {
 		.name	= "imx6q-pcie",
 		.of_match_table = imx6_pcie_of_match,
+#ifdef CONFIG_PM_SLEEP
 		.pm = &pci_imx_pm_ops,
+#endif
 	},
 	.probe    = imx6_pcie_probe,
.shutdown = imx6_pcie_shutdown,